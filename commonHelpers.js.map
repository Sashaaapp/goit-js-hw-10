{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onOpen(selectedDates, dateStr, instance) {\n    instance.clear(); \n  },\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (userSelectedDate <= now) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      iziToast.hide();\n      document.querySelector('[data-start]').disabled = false;\n      updateTimer(); \n    }\n  },\n};\n\nconst datePicker = flatpickr('#datetime-picker', options);\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction updateTimer() {\n  const now = new Date();\n  const userSelectedDate = datePicker.selectedDates[0];\n  const timeDiff = userSelectedDate - now;\n\n  if (timeDiff <= 0) {\n    iziToast.success({\n      title: 'Success',\n      message: 'Timer reached zero!',\n    });\n    document.querySelector('[data-start]').disabled = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDiff);\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n\n  requestAnimationFrame(updateTimer); \n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\ndocument.querySelector('[data-start]').addEventListener('click', function () {\n  document.querySelector('[data-start]').disabled = true;\n  updateTimer(); \n});\n\n\n"],"names":["options","selectedDates","dateStr","instance","userSelectedDate","now","iziToast","updateTimer","datePicker","flatpickr","addLeadingZero","value","timeDiff","days","hours","minutes","seconds","convertMs","ms"],"mappings":"2GAWA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,OAAOC,EAAeC,EAASC,EAAU,CACvCA,EAAS,MAAK,CACf,EACD,QAAQF,EAAe,CACrB,MAAMG,EAAmBH,EAAc,GACjCI,EAAM,IAAI,KAEZD,GAAoBC,GACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,KAElDA,EAAS,KAAI,EACb,SAAS,cAAc,cAAc,EAAE,SAAW,GAClDC,IAEH,CACH,EAEMC,EAAaC,EAAU,mBAAoBT,CAAO,EAExD,SAASU,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASJ,GAAc,CACrB,MAAMF,EAAM,IAAI,KAEVO,EADmBJ,EAAW,cAAc,GACdH,EAEpC,GAAIO,GAAY,EAAG,CACjBN,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qBACf,CAAK,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,MACD,CAED,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAC5D,SAAS,cAAc,aAAa,EAAE,YAAcF,EAAeG,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcH,EAAeI,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcJ,EAAeK,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAE7E,sBAAsBT,CAAW,CACnC,CAEA,SAASU,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,UAAY,CAC3E,SAAS,cAAc,cAAc,EAAE,SAAW,GAClDT,GACF,CAAC"}