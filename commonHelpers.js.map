{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nconst startButton = document.querySelector('[data-start]');\nlet timerActive = false;\nlet autoStartTimer = false;\nconst input = document.querySelector('#datetime-picker');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (userSelectedDate <= now) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n  onOpen(selectedDates, dateStr, instance) {\n    // Додаємо слухача для очищення таймера при відкритті меню вибору\n    clearTimerData();\n  },\n};\n\nconst datePicker = flatpickr(input, options);\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction updateTimer() {\n  const now = new Date();\n  const userSelectedDate = datePicker.selectedDates[0];\n  const timeDiff = userSelectedDate - now;\n\n  if (timeDiff <= 0) {\n    clearInterval(timerInterval);\n    iziToast.success({\n      title: 'Success',\n      message: 'Timer reached zero!',\n    });\n    startButton.disabled = false;\n    input.disabled = false;\n    timerActive = false;\n    autoStartTimer = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDiff);\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nlet timerInterval;\n\nstartButton.addEventListener('click', function () {\n  const userSelectedDate = datePicker.selectedDates[0];\n\n  if (userSelectedDate && !timerActive) {\n    timerInterval = setInterval(updateTimer, 1000);\n    this.disabled = true;\n    timerActive = true;\n  } else if (!userSelectedDate) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a valid future date before starting the timer.',\n    });\n  } else {\n    console.log('Timer is already active.');\n  }\n});\n\ninput.addEventListener('change', function () {\n  autoStartTimer = true;\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (autoStartTimer) {\n    const userSelectedDate = datePicker.selectedDates[0];\n    if (userSelectedDate && !timerActive) {\n      timerInterval = setInterval(updateTimer, 1000);\n      startButton.disabled = true;\n      timerActive = true;\n    }\n  }\n});\n\n// Функція для очищення даних таймера\nfunction clearTimerData() {\n  document.querySelector('[data-days]').textContent = '00';\n  document.querySelector('[data-hours]').textContent = '00';\n  document.querySelector('[data-minutes]').textContent = '00';\n  document.querySelector('[data-seconds]').textContent = '00';\n  clearInterval(timerInterval);\n  startButton.disabled = false;\n  input.disabled = false;\n  timerActive = false;\n  autoStartTimer = false;\n}"],"names":["startButton","timerActive","autoStartTimer","input","options","selectedDates","userSelectedDate","now","iziToast","dateStr","instance","clearTimerData","datePicker","flatpickr","addLeadingZero","value","updateTimer","timeDiff","timerInterval","days","hours","minutes","seconds","convertMs","ms"],"mappings":"2GAYA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACzD,IAAIC,EAAc,GACdC,EAAiB,GACrB,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAmBD,EAAc,GACjCE,EAAM,IAAI,KAEZD,GAAoBC,GACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDR,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,EACD,OAAOK,EAAeI,EAASC,EAAU,CAEvCC,GACD,CACH,EAEMC,EAAaC,EAAUV,EAAOC,CAAO,EAE3C,SAASU,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,GAAc,CACrB,MAAMT,EAAM,IAAI,KAEVU,EADmBL,EAAW,cAAc,GACdL,EAEpC,GAAIU,GAAY,EAAG,CACjB,cAAcC,CAAa,EAC3BV,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qBACf,CAAK,EACDR,EAAY,SAAW,GACvBG,EAAM,SAAW,GACjBF,EAAc,GACdC,EAAiB,GACjB,MACD,CAED,KAAM,CAAE,KAAAiB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5D,SAAS,cAAc,aAAa,EAAE,YAAcH,EAAeK,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcL,EAAeM,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCN,EAAeO,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCP,EAAeQ,CAAO,CAC1B,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,IAAIJ,EAEJlB,EAAY,iBAAiB,QAAS,UAAY,CAChD,MAAMM,EAAmBM,EAAW,cAAc,GAE9CN,GAAoB,CAACL,GACvBiB,EAAgB,YAAYF,EAAa,GAAI,EAC7C,KAAK,SAAW,GAChBf,EAAc,IACJK,EAMV,QAAQ,IAAI,0BAA0B,EALtCE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8DACf,CAAK,CAIL,CAAC,EAEDL,EAAM,iBAAiB,SAAU,UAAY,CAC3CD,EAAiB,EACnB,CAAC,EAED,SAAS,iBAAiB,mBAAoB,UAAY,CACpDA,GACuBU,EAAW,cAAc,IAC1B,CAACX,IACvBiB,EAAgB,YAAYF,EAAa,GAAI,EAC7ChB,EAAY,SAAW,GACvBC,EAAc,GAGpB,CAAC,EAGD,SAASU,GAAiB,CACxB,SAAS,cAAc,aAAa,EAAE,YAAc,KACpD,SAAS,cAAc,cAAc,EAAE,YAAc,KACrD,SAAS,cAAc,gBAAgB,EAAE,YAAc,KACvD,SAAS,cAAc,gBAAgB,EAAE,YAAc,KACvD,cAAcO,CAAa,EAC3BlB,EAAY,SAAW,GACvBG,EAAM,SAAW,GACjBF,EAAc,GACdC,EAAiB,EACnB"}